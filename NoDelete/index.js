(function(i){"use strict";const{React:l,ReactNative:c}=vendetta.metro.common,{plugin:{storage:s},storage:{useProxy:f},ui:{components:{Forms:p}}}=vendetta;"timestamps"in s||(s.timestamps=!1);const{FormRow:g,FormSection:E,FormSwitch:h}=p;function b(m){return f(s),l.createElement(c.ScrollView,{style:{flex:1}},[{label:"Show the time of deletion",default:!1,id:"timestamps"},{label:"Use AM/PM",default:!1,id:"ew"},{label:"The plugin does not keep the messages you've deleted"}].map(function(e){return l.createElement(g,{label:e.label,trailing:"id"in e?l.createElement(h,{value:s[e.id]??e.default,onValueChange:function(t){return s[e.id]=t}}):void 0})}))}const{plugin:{storage:d}}=vendetta;let a=[];const r={settings:b,onUnload(){this.unsub()},onLoad(){vendetta.metro.common.FluxDispatcher.subscribe("CONNECTION_OPEN",m),r.unsub=vendetta.metro.common.FluxDispatcher.unsubscribe("CONNECTION_OPEN",m);function m(e){console.info(e),vendetta.metro.common.toasts.open({content:"NoDelete initialised"}),r.unsub();try{const t=vendetta.metro.findByStoreName("UserStore").getCurrentUser().id==="744276454946242723";this.onUnload=vendetta.patcher.before("dispatch",vendetta.metro.common.FluxDispatcher,function(o){const[n]=o;if(n.type==="MESSAGE_DELETE"){if(a.includes(n.id))return delete a[a.indexOf(n.id)],o;a.push(n.id);let u="This message was deleted";return d.timestamps&&(u+=` (${vendetta.metro.common.moment().format(d.ew?"hh:mm:ss.SS a":"HH:mm:ss.SS")})`),(t||window?.debugpls)&&console.log("[NoDelete \u203A before]",o),o[0]={type:"MESSAGE_EDIT_FAILED_AUTOMOD",messageData:{type:1,message:{channelId:n.channelId,messageId:n.id}},errorResponseBody:{code:2e5,message:u}},(t||window?.debugpls)&&console.log("[NoDelete \u203A after]",o),o}})}catch(t){console.log("[NoDelete \u203A epik fail]"),console.error(t)}}}};return i.default=r,Object.defineProperty(i,"__esModule",{value:!0}),i})({});
