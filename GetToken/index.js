(function(c,y,f,s){"use strict";function m(e,a,r){if(!e.name||!e?.description)throw new Error(`No name(${e?.name}) or description(${e?.description}) in the passed command (command name: ${e?.name})`);if(e.displayName??=a?.names?.[r]??e.name,e.displayDescription??=a?.names?.[r]??e.description,e.options){if(!Array.isArray(e.options))throw new Error(`Options is not an array (received: ${typeof e.options})`);e.options=e.options.map(function(n,t){if(!n?.name||!n?.description)throw new Error(`No name(${n?.name}) or description(${n?.description} in the option with index ${t}`);return n.displayName??=a?.options?.[t]?.names?.[r]??n.name,n.displayDescription??=a?.options?.[t]?.descriptions?.[r]??n.description,n})}return e}function k(e){const{metro:a}=e,{receiveMessage:r}=a.findByProps("sendMessage","receiveMessage"),{createBotMessage:n}=a.findByProps("createBotMessage"),t=a.findByProps("BOT_AVATARS");return function(i,o){if(!i.channelId)throw new Error("No channel id to receive the message into (channelId)");typeof o<"u"&&"author"in o&&"avatar"in o.author&&"avatarURL"in o.author&&(t.BOT_AVATARS[o.author.avatar]=o.author.avatarURL,delete o.author.avatarURL);let u=o===!0?i:n(i);return typeof o=="object"&&(u=e.metro.findByProps("merge").merge(u,o)),r(i.channelId,u),u}}const g={loadingDiscordSpinner:"a:loading:1105495814073229393",aol:"a:aol:1108834296359301161",linuth:":linuth:1110531631409811547",fuckyoy:":fuckyoy:1108360628302782564",getLoading(){return Math.random()<.01?this?.aol:this.loadingDiscordSpinner},getFailure(){return Math.random()<.01?this?.fuckyoy:this.linuth},getSuccess(){return""}},w={command:"https://cdn.discordapp.com/attachments/1099116247364407337/1112129955053187203/command.png"},{meta:{resolveSemanticColor:T}}=s.findByProps("colors","meta"),v=s.findByStoreName("ThemeStore"),d=function(){return parseInt(T(v.theme,y.semanticColors.BACKGROUND_SECONDARY).slice(1),16)},l={author:{username:"TokenUtils",avatar:"command",avatarURL:w.command}};let p;function h(){return window.sendMessage?window.sendMessage?.(...arguments):(p||(p=k(vendetta)),p(...arguments))}var S={meta:vendetta.plugin,patches:[],onUnload(){this.patches.forEach(function(e){return e()}),this.patches=[]},onLoad(){var e=this;try{const a={get(r,n){try{const t={...l,interaction:{name:"/token get",user:s.findByStoreName("UserStore").getCurrentUser()}},{getToken:i}=s.findByProps("getToken");h({loggingName:"Token get output message",channelId:n.channel.id,embeds:[{color:d(),type:"rich",title:"Token of the current account",description:`${i()}`}]},t)}catch(t){console.error(t),alert(`There was an error while exeCuting /token get
`+t.stack)}},login(r,n){try{const t={...l,interaction:{name:"/token login",user:s.findByStoreName("UserStore").getCurrentUser()}},i=new Map(r.map(function(o){return[o.name,o]})).get("token").value;try{h({loggingName:"Token login process message",channelId:n.channel.id,embeds:[{color:d(),type:"rich",title:`<${g.getLoading()}> Switching accounts\u2026`}]},t),s.findByProps("login","logout","switchAccountToken").switchAccountToken(i)}catch(o){console.error(o),h({loggingName:"Token login failure message",channelId:n.channel.id,embeds:[{color:d(),type:"rich",title:`<${g.getFailure()}> Failed to switch accounts`,description:`${o.message}`}]},t)}}catch(t){console.error(t),alert(`There was an error while executing /token login
`+t.stack)}}};[m({type:1,inputType:1,applicationId:"-1",execute:a.get,name:"token get",description:"Shows your current user token"}),m({type:1,inputType:1,applicationId:"-1",execute:a.login,name:"token login",description:"Logs into an account using a token",options:[{required:!0,type:3,name:"token",description:"Token of the account to login into"}]})].forEach(function(r){return e.patches.push(f.registerCommand(r))})}catch(a){console.error(a),alert(`There was an error while loading TokenUtils
`+a.stack)}}};return c.EMBED_COLOR=d,c.authorMods=l,c.default=S,Object.defineProperty(c,"__esModule",{value:!0}),c})({},vendetta.ui,vendetta.commands,vendetta.metro);
