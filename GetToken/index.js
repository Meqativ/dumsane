(function(c,s){"use strict";function p(e,r,a){if(!e.name||!e?.description)throw new Error(`No name(${e?.name}) or description(${e?.description}) in the passed command (command name: ${e?.name})`);if(e.displayName=r?.names?.[a]??e.name,e.displayDescription=r?.names?.[a]??e.description,e.options){if(!Array.isArray(e.options))throw new Error(`Options is not an array (received: ${typeof e.options})`);e.options=e.options.map(function(n,t){if(!n?.name||!n?.description)throw new Error(`No name(${n?.name}) or description(${n?.description} in the option with index ${t}`);return n.displayName=r?.options?.[t]?.names?.[a]??n.name,n.displayDescription=r?.options?.[t]?.descriptions?.[a]??n.description,n})}return e}function h(e){const{receiveMessage:r}=metro.findByProps("sendMessage","receiveMessage"),{createBotMessage:a}=metro.findByProps("createBotMessage"),n=metro.findByProps("BOT_AVATARS");return function(t,o){typeof o<"u"&&"author"in o&&"avatar"in o.author&&"avatarURL"in o.author&&(n.BOT_AVATARS[o.author.avatar]=o.author.avatarURL,delete o.author.avatarURL);let i=a(t);return typeof o=="object"&&(i=metro.findByProps("merge").merge(i,o)),r(t.channelId,i),i}}const m={loadingDiscordSpinner:"a:loading:1105495814073229393",aol:"a:aol:1108834296359301161",linuth:":linuth:1110531631409811547",fuckyoy:":fuckyoy:1108360628302782564",getLoading(){return Math.random()<.01?this?.aol:this.loadingDiscordSpinner},getFailure(){return Math.random()<.01?this?.fuckyoy:this.linuth},getSuccess(){return""}},l={author:{username:"TokenUtils",avatar:"command",avatarURL:{command:"https://cdn.discordapp.com/attachments/1099116247364407337/1112129955053187203/command.png"}.command}};let d;function u(){return window.sendMessage?window.sendMessage?.(...arguments):(d||(d=h(vendetta)),d(...arguments))}var g={patches:[],onUnload(){this.patches.forEach(function(e){return e()})},onLoad(){var e=this;try{const r={get(a,n){try{const t={...l,interaction:{name:"/token get",user:s.metro.findByStoreName("UserStore").getCurrentUser()}},{getToken:o}=s.metro.findByProps("getToken");u({channelId:n.channel.id,embeds:[{type:"rich",title:"Token of the current account",description:`${o()}`}]},t)}catch(t){console.error(t),alert(`There was an error while exeCuting /token get
`+t.stack)}},login(a,n){try{const t={...l,interaction:{name:"/token login",user:s.metro.findByStoreName("UserStore").getCurrentUser()}},o=new Map(a.map(function(i){return[i.name,i]})).get("token").value;try{u({channelId:n.channel.id,embeds:[{type:"rich",title:`<${m.getLoading()}> Switching accounts\u2026`}]},t),s.metro.findByProps("login","logout","switchAccountToken").switchAccountToken(o)}catch(i){u({channelId:n.channel.id,embeds:[{type:"rich",title:`<${m.getFailure()}> Failed to login`,description:`${i.message}`}]},t),console.error(i)}}catch(t){console.error(t),alert(`There was an error while exeCuting /token login
`+t.stack)}}};[p({type:1,inputType:1,applicationId:"-1",execute:r.get,name:"token get",description:"Shows your current user token"}),p({type:1,inputType:1,applicationId:"-1",execute:r.login,name:"token login",description:"Logs into an account using a token",options:[{required:!0,type:3,name:"token",description:"Token of the account to login into"}]})].forEach(function(a){return e.patches.unshift(s.commands.registerCommand(a))})}catch(r){console.error(r),alert(`There was an error while loading TokenUtils(GetToken)
`+r.stack)}}};return c.default=g,Object.defineProperty(c,"__esModule",{value:!0}),c})({},vendetta);
